// Standard error codes used across the application
export const ERROR_CODES = {
  // External service errors
  BINDER_REQUEST_FAILED: 'BINDER_REQUEST_FAILED',
  // Network errors
  CONNECTION_TIMEOUT: 'CONNECTION_TIMEOUT',

  EXTERNAL_SERVICE_ERROR: 'EXTERNAL_SERVICE_ERROR',
  // General errors
  INTERNAL_SERVER_ERROR: 'INTERNAL_SERVER_ERROR',
  // Authentication errors
  INVALID_AUTH_HEADER: 'INVALID_AUTH_HEADER',
  // Validation errors
  INVALID_JSON: 'INVALID_JSON',

  INVALID_PROVIDER: 'INVALID_PROVIDER',

  MISSING_AUTH_HEADER: 'MISSING_AUTH_HEADER',
  MISSING_REQUIRED_FIELD: 'MISSING_REQUIRED_FIELD',
  NETWORK_ERROR: 'NETWORK_ERROR',
  NOT_FOUND: 'NOT_FOUND',
  // Provider errors
  PROVIDER_AUTH_FAILED: 'PROVIDER_AUTH_FAILED',
  PROVIDER_CONFIG_MISSING: 'PROVIDER_CONFIG_MISSING',

  PROVIDER_NOT_CONFIGURED: 'PROVIDER_NOT_CONFIGURED',
  PROVIDER_RATE_LIMITED: 'PROVIDER_RATE_LIMITED',

  PROVIDER_REQUEST_FAILED: 'PROVIDER_REQUEST_FAILED',
  PROVIDER_UNSUPPORTED_OPERATION: 'PROVIDER_UNSUPPORTED_OPERATION',

  // Rate limiting
  RATE_LIMIT_EXCEEDED: 'RATE_LIMIT_EXCEEDED',
  UNKNOWN_ERROR: 'UNKNOWN_ERROR',
  VALIDATION_ERROR: 'VALIDATION_ERROR',
};

// HTTP status codes for different error types
export const ERROR_STATUS_CODES = {
  [ERROR_CODES.INVALID_AUTH_HEADER]: 401,
  [ERROR_CODES.INVALID_JSON]: 400,
  [ERROR_CODES.INVALID_PROVIDER]: 400,
  [ERROR_CODES.MISSING_AUTH_HEADER]: 401,
  [ERROR_CODES.MISSING_REQUIRED_FIELD]: 400,
  [ERROR_CODES.NOT_FOUND]: 404,
  [ERROR_CODES.PROVIDER_AUTH_FAILED]: 401,
  [ERROR_CODES.PROVIDER_CONFIG_MISSING]: 500,
  [ERROR_CODES.PROVIDER_NOT_CONFIGURED]: 501,
  [ERROR_CODES.PROVIDER_RATE_LIMITED]: 429,
  [ERROR_CODES.PROVIDER_UNSUPPORTED_OPERATION]: 501,
  [ERROR_CODES.RATE_LIMIT_EXCEEDED]: 429,
  [ERROR_CODES.VALIDATION_ERROR]: 400,
};

// Create a custom error class for consistent error handling
export class ApiError extends Error {
  constructor(code, message, statusCode = 500, details = null) {
    super(message);
    this.name = 'ApiError';
    this.code = code;
    this.statusCode = statusCode || ERROR_STATUS_CODES[code] || 500;
    this.details = details;
  }
}
